{
	"compiler": {
		"version": "0.8.0+commit.c7dfd78e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_owner",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Simple ERC20 Token with standard token functions.",
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "Ckeck that owners tokens is allowed to send to spender",
					"params": {
						"_owner": "address The address which owns the funds.",
						"_spender": "address The address which will spend the funds."
					},
					"returns": {
						"_0": "A uint256 specifing the amount of tokens still available for the spender."
					}
				},
				"approve(address,uint256)": {
					"details": "Aprove address to spend amount of tokens",
					"params": {
						"_spender": "address to spend the funds.",
						"_value": "amount of tokens to be spent."
					}
				},
				"balanceOf(address)": {
					"details": "Gets the balance of the specified address.",
					"params": {
						"_owner": "address to get balance of."
					},
					"returns": {
						"_0": "uint256 amount owned by the address."
					}
				},
				"constructor": {
					"details": "Create and issue tokens to msg.sender."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "Returns the total supply of tokens."
				},
				"transfer(address,uint256)": {
					"details": "transfer token for a specified address",
					"params": {
						"_to": "address to transfer to.",
						"_value": "amount to be transferred."
					}
				},
				"transferFrom(address,address,uint256)": {
					"details": "Transfer tokens from one address to another",
					"params": {
						"_from": "address to send tokens from",
						"_to": "address to transfer to",
						"_value": "amout of tokens to be transfered"
					}
				}
			},
			"title": "Awesome Token",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"allowance(address,address)": {
					"notice": "Token allowance method"
				},
				"approve(address,uint256)": {
					"notice": "Token approve function"
				},
				"balanceOf(address)": {
					"notice": "Token balanceOf function "
				},
				"constructor": {
					"notice": "Token Constructor"
				},
				"transfer(address,uint256)": {
					"notice": "Token transfer function"
				},
				"transferFrom(address,address,uint256)": {
					"notice": "Token transferFrom function"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/AwesomeToken.sol": "AwesomeToken"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/AwesomeToken.sol": {
			"keccak256": "0x4447a2f67863a39085fc05eb406e8cd17af02392b1b340f47d8c219a3a1f3b80",
			"license": "MIT",
			"urls": [
				"bzz-raw://18fba5c9aaa3fdecefb64d5b34d16f7c67306a06f720694e87219363260625d8",
				"dweb:/ipfs/QmckQZgDiiSGcAUwYtg98Y6Tg2HorvwepK3CAXUV8S3CSw"
			]
		},
		"contracts/StandardToken.sol": {
			"keccak256": "0xcbbb1028f4e680fed8faa44a7104894fcd7b7aed816a0ab8409f2c6465d82070",
			"license": "MIT",
			"urls": [
				"bzz-raw://d9cbdbf53123f1da78aa311f0cca6bef2e9bd69d6fce855af2884e3996f07091",
				"dweb:/ipfs/QmaXf9QVEZMWADPLGaPffGG6Xg3yASamPfdJ7c5x7re6pZ"
			]
		}
	},
	"version": 1
}